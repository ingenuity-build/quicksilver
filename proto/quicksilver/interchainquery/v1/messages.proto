syntax = "proto3";
package quicksilver.interchainquery.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/interchainquery/types";

// Msg defines the interchainquery Msg service.
service Msg {
  // SubmitQueryResponse defines a method for submit query responses.
  rpc SubmitQueryResponse(MsgSubmitQueryResponse)
      returns (MsgSubmitQueryResponseResponse);
}

// MsgSubmitQueryResponse represents a message type to fulfil a query request.
message MsgSubmitQueryResponse {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string chain_id = 1 [ (gogoproto.moretags) = "yaml:\"chain_id\"" ];
  string query_id = 2 [ (gogoproto.moretags) = "yaml:\"query_id\"" ];
  google.protobuf.Any result = 3 [
    (gogoproto.jsontag) = "result,omitempty",
    (gogoproto.moretags) = "yaml:\"result\""
  ];
  string from_address = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgSubmitQueryResponseResponse defines the MsgSubmitQueryResponse response
// type.
message MsgSubmitQueryResponseResponse {}
