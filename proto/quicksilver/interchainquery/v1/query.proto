syntax = "proto3";
package quicksilver.interchainquery.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "quicksilver/interchainquery/v1/genesis.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/interchainquery/types";

// Query provides defines the gRPC querier service.
service QuerySrvr {
  // Params returns the total set of minting parameters.
  rpc Queries(QueryRequestsRequest) returns (QueryRequestsResponse) {
    option (google.api.http).get = "/quicksilver/interchainquery/v1/queries";
  }

}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryRequestsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryRequestsResponse {
  // params defines the parameters of the module.
  repeated quicksilver.interchainquery.v1.Query queries = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
