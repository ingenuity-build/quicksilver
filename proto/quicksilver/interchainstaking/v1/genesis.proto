syntax = "proto3";
package quicksilver.interchainstaking.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/interchainstaking/types";

message RegisteredZone {
  string identifier = 1;
  string connection_id = 2;
  string chain_id = 3;
  ICAAccount deposit_address = 4;
  repeated ICAAccount delegation_addresses = 5;
  string local_denom = 6;
  string base_denom = 7;
  string redemption_rate = 8 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated Validator validators = 9;
  map<string, DelegatorIntent> delegator_intent = 10;
}

message ICAAccount {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
    // balance defines the different coins this balance holds.
  repeated cosmos.base.v1beta1.Coin balance = 2
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin delegated_balance = 3 [ 
      (cosmos_proto.scalar) = "cosmos.Coin", 
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", 
      (gogoproto.nullable) = false];
  string port_name = 4;
  // Delegations here? or against validator?
}

message Validator {
  string valoper_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string commission_rate = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string voting_power = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated Delegation delegations = 4;
}

message DelegatorIntent {
  string delegator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated ValidatorIntent intents = 2;
}

message ValidatorIntent {
  string valoper_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string weight = 2 [
    (gogoproto.moretags) = "yaml:\"relative_weight\"",
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message Delegation {
  string delegation_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
      string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // TODO: determine whether this is Dec (shares) or Coins (tokens)
  string amount = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated cosmos.base.v1beta1.Coin rewards = 4
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
  // Delegations here? or against validator?
  int64 redelegation_end = 5;
}

message PortConnectionTuple {
  string connection_id = 1;
  string port_id = 2;
}

// GenesisState defines the interchainstaking module's genesis state.
message GenesisState {
  repeated RegisteredZone zones = 1 [ (gogoproto.nullable) = false ];
}

message Receipt {
  RegisteredZone zone = 1;
  string sender = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string txhash = 3;
  repeated cosmos.base.v1beta1.Coin amount = 4
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}
